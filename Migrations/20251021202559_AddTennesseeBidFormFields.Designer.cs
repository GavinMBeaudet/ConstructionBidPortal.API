// <auto-generated />
using System;
using ConstructionBidPortal.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConstructionBidPortal.API.Migrations
{
    [DbContext(typeof(BidPortalContext))]
    [Migration("20251021202559_AddTennesseeBidFormFields")]
    partial class AddTennesseeBidFormFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ConstructionBidPortal.API.Models.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdditionalProvisions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommencementDays")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommencementOther")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommencementType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompletionDays")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompletionOther")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompletionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractorAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractorCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ContractorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContractorLicense")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractorSignaturesJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractorState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContractorZip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FinalContractPrice")
                        .HasColumnType("TEXT");

                    b.Property<string>("FinalPaymentDays")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LenderAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LenderCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LenderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LenderState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LenderZip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherContractDocs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerSignaturesJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerZip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProgressRetentionDays")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProgressRetentionPercent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectZip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Proposal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProposalDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TerminationDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TimelineInDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WarrantyYears")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkInvolved")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContractorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BidDeadline")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Budget")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.ProjectCategory", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProjectId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProjectCategory");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.Bid", b =>
                {
                    b.HasOne("ConstructionBidPortal.API.Models.User", "Contractor")
                        .WithMany("ContractorBids")
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConstructionBidPortal.API.Models.Project", "Project")
                        .WithMany("Bids")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.Project", b =>
                {
                    b.HasOne("ConstructionBidPortal.API.Models.User", "Owner")
                        .WithMany("OwnedProjects")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.ProjectCategory", b =>
                {
                    b.HasOne("ConstructionBidPortal.API.Models.Category", "Category")
                        .WithMany("ProjectCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConstructionBidPortal.API.Models.Project", "Project")
                        .WithMany("ProjectCategories")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.Category", b =>
                {
                    b.Navigation("ProjectCategories");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.Project", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("ProjectCategories");
                });

            modelBuilder.Entity("ConstructionBidPortal.API.Models.User", b =>
                {
                    b.Navigation("ContractorBids");

                    b.Navigation("OwnedProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
